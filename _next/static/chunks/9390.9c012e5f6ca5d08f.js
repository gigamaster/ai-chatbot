"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3415,9390],{9390:(t,e,a)=>{a.d(e,{clientHistoryService:()=>s});var r=a(97229),n=a(83415);class i{async getChats(t,e){try{let a=Number.parseInt(t.limit||"10",10),i=t.starting_after||null,s=t.ending_before||null;if(i&&s)throw new r.P7("bad_request:api","Only one of starting_after or ending_before can be provided.");if(!e)throw new r.P7("unauthorized:chat");return await (0,n.Lz)({id:e.id,limit:a,startingAfter:i,endingBefore:s})}catch(t){if(t instanceof r.P7)throw t;throw new r.P7("bad_request:database","Failed to get chats: ".concat(t instanceof Error?t.message:"Unknown error"))}}async deleteAllChats(t){try{if(!t)throw new r.P7("unauthorized:chat");return await (0,n.JH)({userId:t.id})}catch(t){if(t instanceof r.P7)throw t;throw new r.P7("bad_request:database","Failed to delete all chats: ".concat(t instanceof Error?t.message:"Unknown error"))}}}let s=new i},83415:(t,e,a)=>{a.d(e,{CE:()=>d,Dr:()=>b,Ge:()=>y,JH:()=>o,Lz:()=>c,P7:()=>f,Uu:()=>h,_L:()=>i.ry,bd:()=>i.gY,getLocalMessagesByChatId:()=>l,saveLocalChat:()=>s,saveLocalMessages:()=>u,si:()=>w});var r=a(98120),n=a(97229),i=a(91502);async function s(t){let{id:e,userId:a,title:r}=t;try{return await (0,i.xW)({id:e,userId:a,title:r})}catch(t){throw console.error("Error in saveLocalChat:",t),new n.P7("bad_request:database","Failed to save chat")}}async function o(t){let{userId:e}=t;try{let t=await (0,i.W2)(e);if(0===t.length)return{deletedCount:0};for(let e of t)await (0,i.L0)(e.id);return{deletedCount:t.length}}catch(t){throw new n.P7("bad_request:database","Failed to delete all chats by user id")}}async function c(t){let{id:e,limit:a,startingAfter:r,endingBefore:s}=t;try{let t=(await (0,i.W2)(e)).sort((t,e)=>new Date(e.createdAt).getTime()-new Date(t.createdAt).getTime()),o=t;if(r){let e=t.find(t=>t.id===r);if(!e)throw new n.P7("not_found:database","Chat with id ".concat(r," not found"));o=t.filter(t=>new Date(t.createdAt).getTime()>new Date(e.createdAt).getTime())}else if(s){let e=t.find(t=>t.id===s);if(!e)throw new n.P7("not_found:database","Chat with id ".concat(s," not found"));o=t.filter(t=>new Date(t.createdAt).getTime()<new Date(e.createdAt).getTime())}let c=o.length>a;return{chats:c?o.slice(0,a):o,hasMore:c}}catch(t){throw new n.P7("bad_request:database","Failed to get chats by user id")}}async function d(t){let{id:e}=t;try{let t=await (0,i.getLocalChat)(e);if(!t)return null;return t}catch(t){throw new n.P7("bad_request:database","Failed to get chat by id")}}async function l(t){let{id:e}=t;try{return await (0,i.Em)(e)}catch(t){throw new n.P7("bad_request:database","Failed to get messages by chat id")}}async function u(t){let{messages:e}=t;try{if(0===e.length)return!0;let t=e[0].chatId;return await (0,i.b4)(t,e)}catch(t){throw new n.P7("bad_request:database","Failed to save messages")}}async function w(t){let{id:e}=t;try{return await (0,i.BP)(e)}catch(t){throw new n.P7("bad_request:database","Failed to get suggestions by document id")}}async function h(t){try{return await (0,i.aP)(t)}catch(t){throw new n.P7("bad_request:database","Failed to save provider")}}async function f(){try{let t=(0,r.F6)();if(!t)return[];return await (0,i.f5)(t)}catch(t){throw new n.P7("bad_request:database","Failed to get providers")}}async function b(t){try{return await (0,i.rC)(t)}catch(t){throw new n.P7("bad_request:database","Failed to get provider")}}async function y(t){try{return await (0,i.OG)(t)}catch(t){throw new n.P7("bad_request:database","Failed to delete provider")}}a(63045)}}]);