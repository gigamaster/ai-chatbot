"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9268],{63045:(e,t,r)=>{r.d(t,{$R:()=>u,BE:()=>i,Er:()=>s,Hu:()=>l,V_:()=>y,Yj:()=>d});var a=r(56728),n=r(73176);let o=null;function c(){return o||(o=(0,n.P2)("codemo-lock-db",1,{upgrade(e){e.objectStoreNames.contains("lock")||e.createObjectStore("lock")}})),o}function s(e){let t=(0,a.uP)(10);return(0,a.Y8)(e,t)}function i(e,t){try{if(!t||"string"!=typeof t)return console.error("Invalid hashed password format"),!1;if(!e||"string"!=typeof e)return console.error("Invalid plain text password"),!1;return(0,a.Dm)(e,t)}catch(e){return console.error("Error verifying password:",e),!1}}async function l(e){{let t=await c();await t.put("lock",e,"lock_password_hash")}}async function u(){try{let e=await c(),t=await e.get("lock","lock_password_hash");if(void 0===t)return null;return"string"==typeof t?t:null}catch(e){return console.error("Error retrieving stored password:",e),null}}async function d(){{let e=await c();await e.delete("lock","lock_password_hash")}}async function y(){return null!==await u()}},91502:(e,t,r)=>{r.d(t,{BP:()=>v,DY:()=>x,Em:()=>d,IT:()=>h,L0:()=>i,N$:()=>p,OG:()=>A,So:()=>N,UN:()=>S,W2:()=>l,ZD:()=>m,ZS:()=>k,aP:()=>F,b4:()=>u,bM:()=>P,f5:()=>O,gY:()=>y,getLocalChat:()=>s,n$:()=>f,oE:()=>D,rC:()=>j,ry:()=>w,s9:()=>b,xW:()=>c,yK:()=>I});var a=r(73176);let n=null;async function o(){return n||(n=await (0,a.P2)("codemo-db",5,{upgrade(e,t,r,a){if(e.objectStoreNames.contains("chats")||e.createObjectStore("chats",{keyPath:"id"}),e.objectStoreNames.contains("messages")||e.createObjectStore("messages",{keyPath:"id"}).createIndex("by-chat","chatId"),e.objectStoreNames.contains("documents")||e.createObjectStore("documents",{keyPath:"id"}),e.objectStoreNames.contains("files")||e.createObjectStore("files",{keyPath:"id"}),e.objectStoreNames.contains("suggestions")||e.createObjectStore("suggestions",{keyPath:"id"}).createIndex("by-document","documentId"),!e.objectStoreNames.contains("votes")){let t=e.createObjectStore("votes",{keyPath:["chatId","messageId"]});t.createIndex("by-chat","chatId"),t.createIndex("by-message","messageId")}e.objectStoreNames.contains("users")||e.createObjectStore("users",{keyPath:"id"}),e.objectStoreNames.contains("providers")||e.createObjectStore("providers",{keyPath:"id"}),t<3&&e.objectStoreNames.contains("providers")&&console.warn("Providers schema updated - existing providers may need to be re-added"),e.objectStoreNames.contains("userPreferences")||e.createObjectStore("userPreferences",{keyPath:"userId"}),e.objectStoreNames.contains("tokenUsage")||e.createObjectStore("tokenUsage",{keyPath:"userId"})},blocked(){},blocking(){},terminated(){}})),n}async function c(e){try{let t=await o();return await t.put("chats",{...e,createdAt:e.createdAt||new Date,lastModified:new Date().toISOString()})}catch(e){return console.error("Failed to save chat locally:",e),null}}async function s(e){try{let t=await o();return await t.get("chats",e)}catch(e){return console.error("Failed to retrieve chat:",e),null}}async function i(e){try{let t=await o(),r=await t.delete("chats",e);return void 0===r||!1!==r}catch(e){return console.error("Failed to delete chat:",e),!1}}async function l(e){try{let t=await o();return(await t.getAll("chats")).filter(t=>t.userId===e)}catch(e){return console.error("Failed to retrieve chats:",e),[]}}async function u(e,t){try{let r=(await o()).transaction("messages","readwrite"),a=r.objectStore("messages");for(let t of(await a.index("by-chat").getAll(e)))await a.delete(t.id);for(let e of t)await a.add(e);return await r.done,!0}catch(e){return console.error("Failed to save messages locally:",e),!1}}async function d(e){try{let t=await o();return await t.getAllFromIndex("messages","by-chat",e)}catch(e){return console.error("Failed to retrieve messages:",e),[]}}async function y(e){try{let t=await o();return await t.put("documents",{...e,createdAt:e.createdAt||new Date,lastModified:new Date().toISOString()})}catch(e){return console.error("Failed to save document locally:",e),null}}async function w(e){try{let t=await o();return await t.get("documents",e)}catch(e){return console.error("Failed to retrieve document:",e),null}}async function f(e){try{let t=await o();return await t.put("files",{...e,createdAt:e.createdAt||new Date,lastModified:new Date().toISOString()})}catch(e){return console.error("Failed to save file locally:",e),null}}async function h(e){try{let t=await o();return await t.get("files",e)}catch(e){return console.error("Failed to retrieve file:",e),null}}async function g(e){try{let t=await o();return await t.put("suggestions",{...e,createdAt:e.createdAt||new Date,lastModified:new Date().toISOString()})}catch(e){return console.error("Failed to save suggestion locally:",e),null}}async function v(e){try{let t=await o();return await t.getAllFromIndex("suggestions","by-document",e)}catch(e){return console.error("Failed to retrieve suggestions:",e),[]}}async function S(e){try{let t=[];for(let r of e){let e=await g(r);t.push(e)}return t}catch(e){return console.error("Failed to save suggestions:",e),[]}}async function p(e){try{let t=await o();return await t.put("votes",{...e,lastModified:new Date().toISOString()})}catch(e){return console.error("Failed to save vote locally:",e),null}}async function m(e){try{let t=await o();return await t.getAllFromIndex("votes","by-chat",e)}catch(e){return console.error("Failed to retrieve votes:",e),[]}}async function b(e){try{let t=await o();return await t.put("users",{...e,lastModified:new Date().toISOString()})}catch(e){return console.error("Failed to save user locally:",e),null}}async function k(e){try{let t=await o();return await t.get("users",e)}catch(e){return console.error("Failed to retrieve user:",e),null}}async function I(e){try{let t=await o();return(await t.getAll("users")||[]).find(t=>(null==t?void 0:t.email)===e)||null}catch(e){return console.error("Failed to retrieve user by email:",e),null}}async function F(e){try{let t=await o();return await t.put("providers",{...e,createdAt:e.createdAt||new Date().toISOString(),updatedAt:new Date().toISOString()})}catch(e){return console.error("Failed to save provider locally:",e),null}}async function j(e){try{let t=await o();return await t.get("providers",e)}catch(e){return console.error("Failed to retrieve provider:",e),null}}async function O(e){try{let t=await o();return(await t.getAll("providers")).filter(t=>t.userId===e)}catch(e){return console.error("Failed to retrieve providers:",e),[]}}async function A(e){try{let t=await o();return await t.delete("providers",e)}catch(e){return console.error("Failed to delete provider:",e),!1}}async function P(e){try{let t=await o();return await t.put("userPreferences",{...e,updatedAt:new Date().toISOString()})}catch(e){return console.error("Failed to save user preferences locally:",e),null}}async function D(e){try{let t=await o();return await t.get("userPreferences",e)}catch(e){return console.error("Failed to retrieve user preferences:",e),null}}async function N(e,t){try{let r=await o();return await r.put("tokenUsage",{userId:e,usageStats:t,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()})}catch(e){return console.error("Failed to save token usage locally:",e),null}}async function x(e){try{let t=await o();return await t.get("tokenUsage",e)}catch(e){return console.error("Failed to retrieve token usage:",e),null}}}}]);